name: Push to Amazon ECR and Deploy to EB

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ap-northeast-2
  APPLICATION_NAME: "community"
  ENVIRONMENT_NAME: "Community-env-1"
  ECR_REPOSITORY: community-fe          

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Update docker-compose.yml with the new image
      run: |
        sed -i 's|image: .*|image: '"$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"'|g' docker-compose.yml

    - name: Cat docker-compose
      run: cat docker-compose.yml

    - name: Deploy to Elastic Beanstalk (Docker Compose)
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: ${{ env.APPLICATION_NAME }}
        environment_name: ${{ env.ENVIRONMENT_NAME }}
        version_label: "community-version-${{ github.run_id }}"
        region: ${{ env.AWS_REGION }}
        deployment_package: "docker-compose.yml"


